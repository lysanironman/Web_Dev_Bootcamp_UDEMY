<!--Web Developer's Bootcamp Running Notes (TXT).--> 

I. The Front-End
    1. Introduction to this Course
<!-- This space is intentionally left blank. -->
    2. Introduction to Frontend
        a. Frontend 
            - This is the stuff you see when you access a website via web browser (HTML,CSS,JS)
        b. The Holy Trinity of Frontend Development
            - HTML
                *HyperText Markup Language
                *Defines the STRUCTURE of a Webpage.
                *The "nouns".
            - CSS
                *Cascading Style Sheets
                *Defines the STYLE of a Webpage.
                *The "adjectives".
            - JavaScript 
                * Adds Logic and Interactivity to a Webpage.
                * The actions or "verbs".
    3. Intro to HTML
        a. History
            - HTML has been around since 1989/90 which allowed for the publishing/exchanging 
                    of scientific/technical files.
            - HTML allowed electronic linking of documents via Hyperlinks.
        b. Objectives 
            - Write simple HTML documents.
            - Understand difference: Closing Vs Self-Closing Tags.
            - Write tags w/ attributes.
            - Use MDN () as a reference.
            - Given an image, write the corresponding HTML.
        c. The General Rule
                Syntax: <tagName> Some Content </tagName>
        d. MDN (Mozilla Developer Network)
            - To search google "MDN" <nameOfQuery>
        e. HTML Boilerplate/Comments
            - <html> : The Root of an HTML Document. Required to utilize proper syntax.
            - <head> : Provides metadata of an element. (Everything that is not seen)
            - <body> : This is where all the visible elements will be placed so that the browser will   
                display them for the user. 
            - comments: Notation for HTML - <!-- Like this! --> to toggle on and off in VS code,
                one can use the following shortcut: Ctrl + / to auto-assign comment.
        f. Basic Tags
            - <h1> to <h6>: Heading from Largest to Smallest. (Block Element)
            - <p>: This tag is reserved for Paragraphs (Block Element)
            - <STRONG> (Legacy<b>): Makes bold the text found between the opening and closing tags; Strength (Inline Element)
            -<em> (Legacy<i>): Italicizes text found between opening/closing tags; Emphasis (Inline Element)
        g. HTML Lists
            -<ol>: Lists items numerically, starting from 1.
            -<ul>: Lists items with bullet points.
            -<li>: All list items MUST be wrapped in the <li></li> tags to be part of the list. 
            -Nesting Lists: In order to successfully nest a list, new list opening (either ul or ol)must be found within one of 
                the <li></li> elements present.
        h. Quiz 1 - Lists: Ordered and Unordered
        i. Divs and Spans
            -Both: Allow for grouping data together. 
            -<div></div>: A generic container. (Block Element)
            -<span></span>: A generic container. (Inline Element)
        j. HTML attributes
            - Help us add additional information to our HTML code. 
            - Key value pair: A tag and its attribute.
            - Most Important attributes:
                *src="": Used for image <img> tags
                *href="": Used for Anchor <a> and Link <link>  tags; has a closing tag.
            -<img src="">
            -<a href="">Content</a> (Inline Element)
    4. Intermediate HTML
        a. Objectives
            - Write Valid HTML Tables
            - Write validated HTML forms using <form>, <input>, <select>, and <label> tags
        b. HTML Tables
            -<table></table>: This tag allows for browsers to format a table
            -<tr></tr>: Table Row
            -<td></td>: Table data
                * BAD PRACTICE: Styling within HTML file, BUT for the purpose of coherence.
            -<th></th>: Table Heading
            -<thead></thead>: Table Heading elements go within this (Optional Tag)
            -<tbody></tbody>: Table Heading elements go within this (Optional Tag)
        c. HTML Forms
            - Forms are utilized to gather User Data.
            -<form></form>: Container for all the different kinds of inputs a Web Dev could be asking users for.
                *action attribute=Defines where the data is going to be sent to
                *method attribute=the kind of HTTP request (i.e. "post")
            -<input>: There are many types of inputs (here are a short list of some of them)
                *"text": Input that allows user to type in text information
                *"password": Input that hides what the user is typing
                *"date": dropdown menu that allows one to choose a date.
                *"file": Creates a choose file button
                *"checkbox": Creates a checkable box.
            -<label></label>: This is a way to give our inputs descriptive labels.
                *for="labelName" attribute is utilized within the <label> tag.
                *id="labelName' attribute is utilized within the <input> tag.
            <!-- Note that the above for="",id="" helps for people using visual impairment software. -->
        d. Dropdown and Radio Buttons
            -radio="": Cannot be unchecked. Allows User to choose ONE choice.
            -checkbox="": Allows User to choose multiple choices.
            -<select></select>: Creates an Empty Dropdown menu.
            -<option></option>: Creates an Element that is present in the <select> menu.
    5. Introduction to CSS
        a. Objectives:
            - Define and Follow the "General Rule" of CSS.
            -Successfully include CSS in HTML Files.
            -Select CSS elements via tag name, id, or class.
            -Style Elements with basic properties like color and background.
            -Use Chrome CSS Inspector to debug HTML/CSS.
        b. Intro to CSS
            -CSS stands for Cascading Style sheets. 
            - CSSZenGarden.com
            -general rule: 
                Syntax:
                selector {
                    property: value;
                    anotherProperty: value;
                }
        c. CSS Colors
            - Simple Colors: CSS has 147 colors built into it.
            - Hexadecimal: Instead of Base-10 (0-9), this system uses Base-16 (0-15).
            - RGB: Red-Green-Blue; Values range from 0-225.
            -RGBA: Similar to RGB except it allows for an alpha value that manipulates text transparency. 
